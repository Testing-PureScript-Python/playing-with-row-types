{"moduleName":["Example"],"imports":[{"annotation":{"meta":null,"sourceSpan":{"start":[3,1],"end":[29,24]}},"moduleName":["Example"]},{"annotation":{"meta":null,"sourceSpan":{"start":[3,1],"end":[29,24]}},"moduleName":["Prim"]}],"builtWith":"0.13.6","modulePath":"src\\Example.purs","exports":["mkPyList","mkPyOption","mkPyNone","f","list1","opt1","opt2","linq","test1","test2","test3"],"decls":[{"annotation":{"meta":null,"sourceSpan":{"start":[18,1],"end":[18,23]}},"identifier":"opt2","expression":{"annotation":{"meta":{"metaType":"IsForeign"},"sourceSpan":{"start":[19,8],"end":[19,16]}},"value":{"moduleName":["Example"],"identifier":"mkPyNone"},"type":"Var"},"bindType":"NonRec"},{"annotation":{"meta":null,"sourceSpan":{"start":[28,1],"end":[28,27]}},"identifier":"test3","expression":{"annotation":{"meta":null,"sourceSpan":{"start":[29,9],"end":[29,24]}},"argument":{"annotation":{"meta":null,"sourceSpan":{"start":[29,20],"end":[29,24]}},"value":{"moduleName":["Example"],"identifier":"opt2"},"type":"Var"},"type":"App","abstraction":{"annotation":{"meta":null,"sourceSpan":{"start":[29,9],"end":[29,19]}},"argument":{"annotation":{"meta":{"metaType":"IsForeign"},"sourceSpan":{"start":[29,18],"end":[29,19]}},"value":{"moduleName":["Example"],"identifier":"f"},"type":"Var"},"type":"App","abstraction":{"annotation":{"meta":null,"sourceSpan":{"start":[29,9],"end":[29,17]}},"expression":{"annotation":{"meta":{"metaType":"IsForeign"},"sourceSpan":{"start":[29,9],"end":[29,13]}},"value":{"moduleName":["Example"],"identifier":"linq"},"type":"Var"},"fieldName":"map","type":"Accessor"}}},"bindType":"NonRec"},{"annotation":{"meta":null,"sourceSpan":{"start":[17,1],"end":[17,21]}},"identifier":"opt1","expression":{"annotation":{"meta":null,"sourceSpan":{"start":[17,9],"end":[17,21]}},"argument":{"annotation":{"meta":null,"sourceSpan":{"start":[17,20],"end":[17,21]}},"value":{"literalType":"IntLiteral","value":1},"type":"Literal"},"type":"App","abstraction":{"annotation":{"meta":{"metaType":"IsForeign"},"sourceSpan":{"start":[17,9],"end":[17,19]}},"value":{"moduleName":["Example"],"identifier":"mkPyOption"},"type":"Var"}},"bindType":"NonRec"},{"annotation":{"meta":null,"sourceSpan":{"start":[25,1],"end":[25,27]}},"identifier":"test2","expression":{"annotation":{"meta":null,"sourceSpan":{"start":[26,9],"end":[26,24]}},"argument":{"annotation":{"meta":null,"sourceSpan":{"start":[26,20],"end":[26,24]}},"value":{"moduleName":["Example"],"identifier":"opt1"},"type":"Var"},"type":"App","abstraction":{"annotation":{"meta":null,"sourceSpan":{"start":[26,9],"end":[26,19]}},"argument":{"annotation":{"meta":{"metaType":"IsForeign"},"sourceSpan":{"start":[26,18],"end":[26,19]}},"value":{"moduleName":["Example"],"identifier":"f"},"type":"Var"},"type":"App","abstraction":{"annotation":{"meta":null,"sourceSpan":{"start":[26,9],"end":[26,17]}},"expression":{"annotation":{"meta":{"metaType":"IsForeign"},"sourceSpan":{"start":[26,9],"end":[26,13]}},"value":{"moduleName":["Example"],"identifier":"linq"},"type":"Var"},"fieldName":"map","type":"Accessor"}}},"bindType":"NonRec"},{"annotation":{"meta":null,"sourceSpan":{"start":[16,1],"end":[16,25]}},"identifier":"list1","expression":{"annotation":{"meta":null,"sourceSpan":{"start":[16,10],"end":[16,25]}},"argument":{"annotation":{"meta":null,"sourceSpan":{"start":[16,19],"end":[16,25]}},"value":{"literalType":"ArrayLiteral","value":[{"annotation":{"meta":null,"sourceSpan":{"start":[16,20],"end":[16,21]}},"value":{"literalType":"IntLiteral","value":1},"type":"Literal"},{"annotation":{"meta":null,"sourceSpan":{"start":[16,23],"end":[16,24]}},"value":{"literalType":"IntLiteral","value":2},"type":"Literal"}]},"type":"Literal"},"type":"App","abstraction":{"annotation":{"meta":{"metaType":"IsForeign"},"sourceSpan":{"start":[16,10],"end":[16,18]}},"value":{"moduleName":["Example"],"identifier":"mkPyList"},"type":"Var"}},"bindType":"NonRec"},{"annotation":{"meta":null,"sourceSpan":{"start":[22,1],"end":[22,23]}},"identifier":"test1","expression":{"annotation":{"meta":null,"sourceSpan":{"start":[23,9],"end":[23,25]}},"argument":{"annotation":{"meta":null,"sourceSpan":{"start":[23,20],"end":[23,25]}},"value":{"moduleName":["Example"],"identifier":"list1"},"type":"Var"},"type":"App","abstraction":{"annotation":{"meta":null,"sourceSpan":{"start":[23,9],"end":[23,19]}},"argument":{"annotation":{"meta":{"metaType":"IsForeign"},"sourceSpan":{"start":[23,18],"end":[23,19]}},"value":{"moduleName":["Example"],"identifier":"f"},"type":"Var"},"type":"App","abstraction":{"annotation":{"meta":null,"sourceSpan":{"start":[23,9],"end":[23,17]}},"expression":{"annotation":{"meta":{"metaType":"IsForeign"},"sourceSpan":{"start":[23,9],"end":[23,13]}},"value":{"moduleName":["Example"],"identifier":"linq"},"type":"Var"},"fieldName":"map","type":"Accessor"}}},"bindType":"NonRec"}],"comments":[{"LineComment":" | This module is to show the type checker,"},{"LineComment":"   and cannot run without giving proproriate implementations in Example.py"}],"foreign":["mkPyList","mkPyOption","mkPyNone","f","linq"],"sourceSpan":{"start":[3,1],"end":[29,24]}}